[
    [
        {
            "answer": "46",
            "solution": [
                {
                    "text": "Заметим, что B  — единственная вершина степени 4. Значит, B соответствует номер 1. G и D  — вершины степени 2, следовательно, им соответствуют номера 2 и 7. Пункты A и C единственные вершины степени 3, соединённые с пунктами G и D, значит, A и C соответствуют номера 3 и 5. Таким образом, вершинам E и F соответствуют номера 4 и 6. Значит, ответ  — 46."
                }
            ]
        },
        {
            "answer": "xwzy",
            "solution": [
                {
                    "text": "Составим таблицу истинности для выражения (x ∧ y) ∨ (y ∧ z)) ≡ ((x → w) ∧ (w → z)) при помощи языка Python:"
                },
                { "text": "print('x y z w')" },
                { "text": "for x in range(0, 2):" },
                { "text": "    for y in range(0, 2):" },
                { "text": "        for z in range(0, 2):" },
                { "text": "            for w in range(0, 2):" },
                { "text": "                if ((x and y) or (y and z)) == ((x <= w) and (w <=z)):" },
                { "text": "                    print(x, y, z, w)" }
            ]
        },
        {
            "answer": "116440",
            "solution": [
                {
                    "text": "Открыв файл, перейдём на лист «Магазин». Воспользуемся стандартными средствами редактора Microsoft Excel, требуется отфильтровать записи в таблице, оставив только записи для магазинов Заречного района. Для этого включим фильтр."
                },
                { "img": "3_1.png" },
                { "text": "Получаем следующую таблицу:" },
                { "img": "3_2.png" },
                {
                    "text": "Перейдём на лист «Товар». В этой таблице, снова воспользовавшись фильтром, найдём артикулы товаров, поставляемых мелькомбинатом  — 18, 33 и 34:"
                },
                { "img": "3_3.png" },
                {
                    "text": "Теперь перейдём на лист «Движение товаров». Снова воспользуемся фильтром по столбцу «ID магазина», чтобы вывести в таблице только те записи, которые относятся к магазинам Заречного района. В фильтре отметим те ID магазинов, которые были найдены в таблице «Магазин»  — M3, M9, М11 и М14. Также применим фильтр к столбцу «Артикул», чтобы оставить только записи о движении товаров по артикулам 18, 33 и 34. Окончательно, оставим только операции типа «Поступление». В результате получим следующую таблицу:"
                },
                { "img": "3_4.png" },
                { "text": "Скопируем полученную таблицу на отдельный лист. В результате получаем следующую таблицу:" },
                { "img": "3_5.png" },
                {
                    "text": "Необходимо посчитать общую стоимость продуктов, поставленных с мелькомбината. Для этого в каждой строке необходимо умножить количество упаковок на цену. В ячейке H2 запишем формулу =F2*G2 и скопируем во все ячейки диапазона H3:H13. В ячейке I2 запишем формулу =СУММ(H2:H13) и получим ответ  — 116440."
                }
            ]
        },
        {
            "answer": "24",
            "solution": [
                {
                    "text": "Букву О закодируем кодовым словом 11, поскольку буква О повторяется в слове ВОДОВОРОТ 4 раза. Букву В закодируем кодовым словом 101, поскольку буква В повторяется в слове ВОДОВОРОТ 2 раза. Букву Т нельзя закодировать словом 000, так как в этом случае невозможно будет закодировать букву А, поэтому букву Т закодируем словом 0000. Тогда наименьшее количество двоичных знаков, которые потребуются для кодирования слова ВОДОВОРОТ равно 3 + 2 + 3 + 2 + 3 + 2 + 3 + 2 + 4  =  24."
                }
            ]
        },
        {
            "answer": "1009",
            "solution": [
                { "text": "for n in range(1, 10000):" },
                { "text": "    s = bin(n)[2:]  # перевод в двоичную систему" },
                { "text": "    s = str(s)" },
                { "text": "    s = s[:-1]" },
                { "text": "    if n % 2 != 0:" },
                { "text": "        s += '10'" },
                { "text": "    else:" },
                { "text": "        s += '01'" },
                { "text": "    r = int(s, 2)  # перевод в десятичную систему" },
                { "text": "    if r == 2018:" },
                { "text": "        print(n)" }
            ]
        },
        {
            "answer": "42",
            "solution": [
                {
                    "text": "Заметим, что Исполнитель чертит прямоугольник. Для построения такого рисунка можно использовать Word:"
                },
                { "text": "– Добавляем таблицу размером 10 на 10;" },
                { "text": "– Выбираем в меню Фигуры на вкладке Вставка прямоугольник;" },
                { "img": "6.png" },
                { "text": "– Посчитаем точки внутри прямоугольника." }
            ]
        },
        {
            "answer": "4",
            "solution": [
                { "text": "Найдём размер файла, получившегося при повторной записи:" },
                { "text": "12*2/(1.5*4) = 4" }
            ]
        },
        {
            "answer": "504",
            "solution": [
                { "text": "import itertools" },
                { "text": "alphabet = '01234567'" },
                { "text": "ar = itertools.permutations(alphabet, 5) #Размещение" },
                { "text": "arl = []" },
                { "text": "for e in ar:" },
                { "text": "    arl.append(list(e))" },
                { "text": "count = 0" },
                { "text": "for e in arl:" },
                { "text": "    flag = True" },
                { "text": "    for i in range(len(e)-1):" },
                {
                    "text": "        if (e[0] == '0') or (int(e[i]) % 2 == 0 and int(e[i+1]) % 2 == 0) or (int(e[i]) % 2 != 0 and int(e[i+1]) % 2 != 0):"
                },
                { "text": "            flag = False" },
                { "text": "    if flag:" },
                { "text": "        count += 1" },
                { "text": "print(count)" }
            ]
        },
        {
            "answer": "526",
            "solution": [
                {
                    "text": "Для поиска среднего арифметического значения температуры воспользуемся формулой =СРЗНАЧ(B2:Y92). Среднее арифметическое значение температуры равно 23,9. Для поиска максимального значения воспользуемся формулой =МАКС(B2:Y92). Максимальное значение температуры равно 39,0. Теперь с помощью формулы =СЧЁТЕСЛИМН(B2:Y92; '>11,95'; B2:Y92;'<19,5') найдём количество измерений, которые выше половины среднего арифметического значения, но ниже половины от максимального значения  — 526."
                }
            ]
        },
        {
            "answer": "1",
            "solution": [
                {
                    "text": "Воспользуемся поисковыми средствами текстового редактора. В строке поиска последовательно будем вводить сначала « долг», потом «Долг ». Подсчитав общее количество результатов, получаем ответ  — 1."
                }
            ]
        },
        {
            "answer": "18",
            "solution": [
                {
                    "text": "k бит позволяют кодировать 2^k символов, поэтому для кодирования 65-символьного алфавита требуется 7 бит (ведь 2^7 = 128 >= 65). Для хранения 11 символов требуется 11 умножить на 7 = 77 бит. Минимальное количество байт, вмещающее в себя 77 бит  — 10 байт (80 бит)."
                },
                {
                    "text": "Номер подразделения является число от 1 до 700, следовательно, для его кодирования необходимо такое количество битов k, чтобы 2^k≥700, то есть не менее 10 битов. Номер подразделения занимает минимально возможное целое число байт, поэтому для его кодирования требуется 2 байта."
                },
                {
                    "text": "Для хранения данных об одном сотруднике требуется 30 байт данных. Из них 10 байт отводится на хранение личного кода, ещё 2 байта требуется для хранения номера подразделения. Следовательно, для хранения дополнительных сведений о сотруднике отводится 18 байт."
                }
            ]
        },
        {
            "answer": "12",
            "solution": [
                { "text": "s = '1' * 39 + '2' * 39" },
                { "text": "while '111' in s:" },
                { "text": "    s = s.replace('111', '2', 1)" },
                { "text": "    s = s.replace('222', '1', 1)" },
                { "text": "print(s)" }
            ]
        },
        {
            "answer": "16",
            "solution": [
                {
                    "text": "Количество путей до города Х = количество путей добраться в любой из тех городов, из которых есть дорога в Х."
                },
                {
                    "text": "При этом, если путь не должен проходить через какой-то город, нужно просто не учитывать этот город при подсчёте сумм. А если город, наоборот, обязательно должен лежать на пути, тогда для городов, в которые из нужного города идут дороги, в суммах нужно брать только этот город."
                },
                {
                    "text": "С помощью этого наблюдения посчитаем последовательно количество путей до каждого из городов:"
                },
                { "text": "А = 1." },
                { "text": "Б = А = 1." },
                { "text": "Г = А = 1 (В не учитываем, поскольку путь не должен проходить через город В)." },
                { "text": "Д = Б = 1 (В не учитываем, поскольку путь не должен проходить через город В)." },
                { "text": "Е = Г + Д = 2 (В не учитываем, поскольку путь не должен проходить через город В)." },
                { "text": "Ж = Д = 1." },
                { "text": "И = Г + Е = 3." },
                { "text": "К = Д + Ж + И = 5." },
                { "text": "Л = К + Ж = 6." },
                { "text": "М = К = 5." },
                { "text": "Н = К + Л + М = 16." }
            ]
        },
        {
            "answer": "38",
            "solution": [
                { "text": "x = (9**11)*(3**20) - 3**9 - 27" },
                { "text": "s = ''" },
                { "text": "while x != 0: " },
                { "text": "    s += str(x % 3)" },
                { "text": "    x //= 3" },
                { "text": "s = s[::-1]" },
                { "text": "print(s.count('2'))" }
            ]
        },
        {
            "answer": "12",
            "solution": [
                { "text": "a = set()" },
                { "text": "def f(x,a):" },
                { "text": "    return ((x in a) <= (x**2 <= 81)) and ((x**2 <= 36) <= (x in a))" },
                { "text": "for x in range(-1000,1000):" },
                { "text": "    if not f(x,a):" },
                { "text": "        a.add(x)" },
                { "text": "print(len(a) - 1)" }
            ]
        },
        {
            "answer": "4095",
            "solution": [
                { "text": "def F(n):" },
                { "text": "    if n == 0:" },
                { "text": "        return 0" },
                { "text": "    if n % 2 == 0 and n > 0:" },
                { "text": "        return F(n // 2)" },
                { "text": "    if n % 2 != 0:" },
                { "text": "        return 1 + F(n - 1)" },
                { "text": "i = 0" },
                { "text": "while F(i) != 12:" },
                { "text": "    i += 1" },
                { "text": "print(i)" }
            ]
        },
        {
            "answer": "13931722 19993",
            "solution": [
                { "text": "count = m = 0" },
                { "text": "f = open('17.txt')" },
                { "text": "l = [int(i) for i in f]" },
                { "text": "for i in range(len(l) - 1):" },
                { "text": "    for j in range(i + 1, len(l)):" },
                { "text": "        if (l[i] + l[j]) %2 != 0 and (l[i] * l[j]) % 3 == 0:" },
                { "text": "            count += 1" },
                { "text": "            m = max(m, l[i] + l[j])" },
                { "text": "print(count, m)" }
            ]
        },
        {
            "answer": "1276671",
            "solution": [
                {
                    "text": "Для поиска максимального значения будем работать с областью А13:J22, так как при расчетах будем использовать исходные значения монет в каждой клетке. В ячейку А22 напишем значение =A10. Для каждой ячейки левого столбца это будет сумма всех ячеек ниже от текущей. Внесем в ячейку А21 формулу =A9+A22 и скопируем за маркер вверх до ячейки A13. Далее в ячейку B22 вставим формулу =B10+МАКС(A22;B23) и скопируем за маркер в ячейки B13:J22. Значение в ячейке J13 будет максимальной денежной суммой, которую сможет собрать Робот  — 1276."
                },
                {
                    "text": "Аналогичным образом найдём значение минимальной денежной суммы. Вместо функции МАКС в диапазоне ячеек B13:J22 напишем функцию МИН. В таком случае значение в ячейке J13 будет минимальной денежной суммой, которую сможет собрать Робот  — 671."
                }
            ]
        },
        {
            "answer": "3",
            "solution": [
                { "text": "def f(s, n, m):" },
                { "text": "    if s >= 69: return n % 2 == m % 2" },
                { "text": "    if n == m: return 0" },
                { "text": "    h = [f(s + 1, n + 1, m), f(s + 4, n + 1, m), f(s * 5, n + 1, m)]" },
                { "text": "    return any(h)" },
                { "text": "for s in range(1, 69):" },
                { "text": "    for m in range(1, 5):" },
                { "text": "        if f(s, 0, m) == True:" },
                { "text": "            print(s, m)" },
                { "text": "            break" },
                { "text": "Берем минимальное число, у которого 2 хода" }
            ]
        },
        {
            "answer": "912",
            "solution": [
                { "text": "def f(s, n, m):" },
                { "text": "    if s >= 69: return n % 2 == m % 2" },
                { "text": "    if n == m: return 0" },
                { "text": "    h = [f(s + 1, n + 1, m), f(s + 4, n + 1, m), f(s * 5, n + 1, m)]" },
                { "text": "    return any(h) if (n + 1) % 2 == m % 2 else all(h)" },
                { "text": "for s in range(1, 69):" },
                { "text": "    for m in range(1, 5):" },
                { "text": "        if f(s, 0, m) == True:" },
                { "text": "            print(s, m)" },
                { "text": "            break" },
                { "text": "Берем 2 числа, у которых 3 хода" }
            ]
        },
        {
            "answer": "8",
            "solution": [
                { "text": "def f(s, n, m):" },
                { "text": "    if s >= 69: return n % 2 == m % 2" },
                { "text": "    if n == m: return 0" },
                { "text": "    h = [f(s + 1, n + 1, m), f(s + 4, n + 1, m), f(s * 5, n + 1, m)]" },
                { "text": "    return any(h) if (n + 1) % 2 == m % 2 else all(h)" },
                { "text": "for s in range(1, 69):" },
                { "text": "    for m in range(1, 5):" },
                { "text": "        if f(s, 0, m) == True:" },
                { "text": "            print(s, m)" },
                { "text": "            break" },
                { "text": "Берем минимальное число, у которого 4 хода" }
            ]
        },
        {
            "answer": "34",
            "solution": [
                {
                    "text": "Отсортируем данные в таблице так, чтобы все независимые процессы оказались в начале таблицы и любой процесс был расположен после всех процессов, от которых он зависит. Также в таблицу добавим столбец «Время окончания процесса» и запишем туда длительности независимых процессов."
                },
                { "img": "22_1.png" },
                { "text": "Далее рассчитаем время выполнения оставшихся процессов:" },
                { "text": "f(3) = 8 + f(1) = 8 + 6 = 14;" },
                { "text": "f(4) = 5 + max(f(2), f(3)) = 5 + 14 = 19;" },
                { "text": "f(6) = 9 + max(f(3), f(4)) = 9 + 19 = 28;" },
                { "text": "f(8) = 8 + f(3) = 8 + 14 = 22;" },
                { "text": "f(9) = 3 + max(f(4), f(5)) = 3 + 19 = 22;" },
                { "text": "f(10) = 6 + f(6) = 6 + 28 = 34;" },
                { "text": "f(11) = 1 + max(f(7), f(8)) = 1 + 22 = 23;" },
                { "text": "f(12) = 4 + max(f(7), f(9)) = 4 + 22 = 26;" },
                { "text": "f(13) = 4 + max(f(3), f(4)) = 4 + 19 = 23;" },
                { "text": "f(14) = 6 + max(f(5), f(7)) = 6 + 3 = 9;" },
                { "text": "f(15) = 2 + max(f(4), f(9)) = 2 + 22 = 24." },
                { "img": "22_2.png" },
                { "text": "Ответ: 34." }
            ]
        },
        {
            "answer": "315",
            "solution": [
                { "text": "def f(x, y):" },
                { "text": "    if x > y or x == 14:" },
                { "text": "        return 0" },
                { "text": "    if x == y:" },
                { "text": "        return 1" },
                { "text": "    else:" },
                { "text": "        return f(x + 1, y) + f(x + 2, y)" },
                { "text": "print(f(2, 9) * f(9, 18))" }
            ]
        },
        {
            "answer": "1",
            "solution": [
                { "text": "f = open('24.txt').readline()" },
                { "text": "k = 1" },
                { "text": "m = 1" },
                { "text": "for i in range(len(f)-1):" },
                { "text": "    if f[i] == 'R' and f[i+1] == 'R':" },
                { "text": "        k += 1" },
                { "text": "        m = max(m, k)" },
                { "text": "    else: k = 1" },
                { "text": "print(m)" }
            ]
        },
        {
            "answer": "3 58153 7 24923 59 2957 13 13421 149 1171 5 34897 211 827 2 87251",
            "solution": [
                { "text": "def f(x):" },
                { "text": "    k=2" },
                { "text": "    deliteli=set()" },
                { "text": "    while k * k <= x:" },
                { "text": "        if x % k==0:" },
                { "text": "            deliteli.add(k)" },
                { "text": "            if x // k < x:" },
                { "text": "                deliteli.add(x // k)" },
                { "text": "        k = k + 1" },
                { "text": "    return sorted(deliteli)" },
                { "text": "start = 174457" },
                { "text": "end = 174505" },
                { "text": "for i in range(start, end + 1):" },
                { "text": "    if len(f(i)) == 2:" },
                { "text": "        print(f(i))" }
            ]
        },
        {
            "answer": "601 34",
            "solution": [
                { "text": "f = open('27888.txt')" },
                { "text": "data = f.readlines()" },
                { "text": "s = data[0].split()" },
                { "text": "s = int(s[0])" },
                { "text": "del (data[0])  # первая строка больше не нужна, удаляем ее" },
                { "text": "for i in range(0, len(data)):" },
                { "text": "    data[i] = int(data[i])" },
                { "text": "data = sorted(data)" },
                { "text": "summa = 0" },
                { "text": "for count in range(0, len(data)):" },
                { "text": "    if summa + data[count] > s: break" },
                { "text": "    summa += data[count]" },
                { "text": "print(count)" },
                { "text": "zapas = s - summa" },
                { "text": "for i in range(0, len(data)):" },
                { "text": "    if data[i] - data[count - 1] <= zapas:" },
                { "text": "        itog = data[i]" },
                { "text": "print(itog)" }
            ]
        },
        {
            "answer": "447552 994000",
            "solution": [
                { "text": "f = open('27-B_2.txt')  # для файла A укажите его название" },
                { "text": "s = f.readlines() " },
                { "text": "n = int(s[0])" },
                { "text": "maxi = 0" },
                { "text": "max_0 = 0" },
                { "text": "max_2 = 0" },
                { "text": "max_7 = 0" },
                { "text": "max_14 = 0" },
                { "text": "for i in range(1, n + 1):" },
                { "text": "    s[i] = int(s[i])" },
                { "text": "    if s[i] % 14 == 0:" },
                { "text": "        max_14 = max(max_14, s[i])" },
                { "text": "    elif s[i] % 7 == 0:" },
                { "text": "        max_7 = max(max_7, s[i])" },
                { "text": "    elif max_2 % 2 == 0:" },
                { "text": "        max_2 = max(max_2, s[i])" },
                { "text": "    else:" },
                { "text": "        max_0 = max(max_0, s[i])" },
                { "text": "maxi = max(max_14 * max(max_7, max_0, max_2), max_7 * max_2)" },
                { "text": "print(maxi)" }
            ]
        }
    ]
]
